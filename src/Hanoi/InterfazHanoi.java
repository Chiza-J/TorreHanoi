/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hanoi;

import Hanoi.Hanoi;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.Random;
import javax.swing.*;
import javax.swing.Timer;

/**
 *
 * @author chiza
 */
public class InterfazHanoi extends javax.swing.JFrame {

    private int numDiscos, numPostes;
    private Hanoi hanoi;
    private JPanel[] panelesTorres;
    private JLabel[] palos;
    private Stack<Integer>[] torres;
    private List<int[]> movimientos;
    private int pasoActual = 0;
    private Timer timer;
    private Color[] discoColors;

    /**
     * Creates new form InterfazHanoi
     */
    public InterfazHanoi() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Background = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPalo = new javax.swing.JTextField();
        txtDisco = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 710, 440));

        jLabel1.setText("Palo:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel2.setText("Disco:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));
        jPanel2.add(txtPalo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 110, -1));
        jPanel2.add(txtDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 73, -1));

        btnGo.setText("Go");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });
        jPanel2.add(btnGo, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 20, 100, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        numDiscos = Integer.parseInt(txtDisco.getText());
        numPostes = Integer.parseInt(txtPalo.getText());

        if (numPostes < 3 || numDiscos < 1) {
            JOptionPane.showMessageDialog(this, "Debe haber al menos Juego con el destino funciona pero no valida el movimiento3 palos y 1 disco.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        hanoi = new Hanoi(numDiscos, numPostes);
        movimientos = hanoi.resolver();
        discoColors = new Color[numDiscos];
        Random rand = new Random();

        for (int i = 0; i < numDiscos; i++) {
            discoColors[i] = new Color(rand.nextInt(256), rand.nextInt(256), rand.nextInt(256));
        }

        iniciarTorres();
        timer = new Timer(100, this::mostrarSiguienteMovimiento); // Rapidez de 100ms
        timer.setInitialDelay(0);
        timer.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGoActionPerformed

    private void iniciarTorres() {
        Background.removeAll();
        Background.setLayout(new GridLayout(1, numPostes));

        torres = new Stack[numPostes];
        panelesTorres = new JPanel[numPostes];
        palos = new JLabel[numPostes];

        for (int i = 0; i < numPostes; i++) {
            torres[i] = new Stack<>();
            panelesTorres[i] = new JPanel(null);
            panelesTorres[i].setPreferredSize(new Dimension(200, 400)); // Tamaño para los palos
            panelesTorres[i].setBackground(Color.WHITE);

            palos[i] = new JLabel();
            palos[i].setOpaque(true);
            palos[i].setBackground(Color.BLACK);
            palos[i].setBounds(95, 50, 10, 300); // Centrar el palo
            panelesTorres[i].add(palos[i]);

            Background.add(panelesTorres[i]);
        }

        // Reiniciar discos en el primer palo
        for (int i = numDiscos; i > 0; i--) {
            torres[0].push(i);
        }

        actualizarInterfaz();
        Background.revalidate();
        Background.repaint();
    }

    private void mostrarSiguienteMovimiento(ActionEvent e) {
        if (pasoActual < movimientos.size()) {
            int[] mov = movimientos.get(pasoActual++);
            int origen = mov[0];
            int destino = mov[1];

            if (!torres[origen].isEmpty() && esMovimientoValido(origen, destino)) {
                int disco = torres[origen].pop();
                torres[destino].push(disco);
                actualizarInterfaz();
            } else {
                timer.stop();
                JOptionPane.showMessageDialog(this, "Error en movimiento: " + origen + " -> " + destino);
            }
        } else {
            timer.stop();
            JOptionPane.showMessageDialog(this, "¡Resuelto correctamente!");
        }
    }

    private void actualizarInterfaz() {
        for (int i = 0; i < numPostes; i++) {
            panelesTorres[i].removeAll();
            panelesTorres[i].add(palos[i]);

            int yPos = 350;
            for (int disco : torres[i]) {
                JLabel lblDisco = new JLabel();
                lblDisco.setOpaque(true);
                lblDisco.setBackground(discoColors[disco - 1]);
                lblDisco.setHorizontalAlignment(SwingConstants.CENTER);

                int ancho = 20 + (15 * disco); // Aumentar tamaño proporcional al disco
                lblDisco.setBounds(100 - (ancho / 2), yPos, ancho, 20);
                yPos -= 25;

                panelesTorres[i].add(lblDisco);
            }

            panelesTorres[i].revalidate();
            panelesTorres[i].repaint();
        }
    }

    private boolean esMovimientoValido(int origen, int destino) {
        if (torres[origen].isEmpty()) {
            return false;
        }
        if (torres[destino].isEmpty()) {
            return true;
        }
        return torres[destino].peek() > torres[origen].peek();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazHanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazHanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazHanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazHanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazHanoi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton btnGo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtDisco;
    private javax.swing.JTextField txtPalo;
    // End of variables declaration//GEN-END:variables
}
